/**
 * @openapi
 *
 * /api/private/alumnos/update: 
 *   put:
 *     security:
 *       - Authorization: []
 *     tags:
 *       - Alumnos
 *     description: Cambia datos de configuración del alumno cuyo token de autorización va en la cabecera.
 *     requestBody:
 *       description: Nueva clave del alumno.
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/actualizacionAlumno'
 *     responses:
 *       200:
 *         description: Indica que la operación se realizó con éxito.
 *         content: 
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/alumnoResponse'
 *       400:
 *         description: Alguno de los campos enviados es incorrecto.
 *         content: 
 *           application/json: 
 *             schema: 
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/errorValidation'
 *       500:
 *         description: Error que se ha producido en el servidor.
 *         content:
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/error' 
 * /api/private/alumnos/update/password: 
 *   put:
 *     security:
 *       - Authorization: []
 *     tags:
 *       - Alumnos
 *     description: Cambia la clave de acceso del alumno cuyo token de autorización va en la cabecera.
 *     requestBody:
 *       description: Nueva clave del alumno.
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/newPasswordRequest'
 *     responses:
 *       200:
 *         description: Indica que la operación se realizó con éxito.
 *         content: 
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/successResponse'
 *       400:
 *         description: Alguno de los campos enviados es incorrecto.
 *         content: 
 *           application/json: 
 *             schema: 
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/errorValidation'
 *       500:
 *         description: Error que se ha producido en el servidor.
 *         content:
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/error' 
 * /api/private/alumnos/delete/{alumnoId}:
 *   delete:
 *     security:
 *       - Authorization: []
 *     tags:
 *       - Alumnos
 *     description: Hace el borrado lógico del alumno cuyo id va en la petición. En la cabecera deberá ir el token de un administrador.
 *     parameters:
 *        - in: path
 *          name: alumnoId
 *          schema:
 *            type: integer
 *          required: true
 *          description: Identificador del alumno a borrar.
 *     responses:
 *       200:
 *         description: Indica que la operación se realizó con éxito.
 *         content: 
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/successResponse'
 *       404:
 *         description: No existe ningún alumno con el identificador especificado.
 *         content: 
 *           application/json: 
 *             schema: 
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/error'
 *       500:
 *         description: Error que se ha producido en el servidor.
 *         content:
 *           application/json: 
 *             schema: 
 *               $ref: '#/components/schemas/error' 
 *components: 
 *  schemas:
 *    newPasswordRequest:
 *      title: NewPasswordRequest
 *      description: Nuevo password para un usuario
 *      type: object
 *      properties:
 *        password:
 *          type: string
 *          description: Valor del password
 *          example: 123456
 *    actualizacionAlumno:
 *      title: ActualizacionAlumno
 *      description: Nuevos datos del alumno
 *      type: object
 *      properties:
 *        nombreCompleto:
 *          type: string
 *          description: Nombre completo del alumno
 *          example: Mario Rodríguez Artalejo
 *        userName:
 *          type: string
 *          description: Nombre del alumno en la aplicación
 *          example: mRodriguez
 *        email:
 *          type: string
 *          description: Correo electrónico del alumno
 *          example: mRodriguez@gmail.com
 */